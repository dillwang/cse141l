|alu
sel_a_mux => Decoder0.IN0
sel_b_mux => Decoder2.IN0
sel_gd_b_mux => Decoder1.IN0
sel_bit_mux => Decoder3.IN0
sel_shift_mux => Decoder4.IN0
shift_dir => shift_dir.IN1
shift_mode => shift_mode.IN1
sel_out_mux[0] => sel_out_mux[0].IN1
sel_out_mux[1] => sel_out_mux[1].IN1
sel_out_mux[2] => sel_out_mux[2].IN1
sel_out_mux[3] => sel_out_mux[3].IN1
input_A[0] => out_a_mux.DATAA
input_A[0] => inv_input_A[0].IN1
input_A[1] => out_a_mux.DATAA
input_A[1] => inv_input_A[1].IN1
input_A[2] => out_a_mux.DATAA
input_A[2] => inv_input_A[2].IN1
input_A[3] => out_a_mux.DATAA
input_A[3] => inv_input_A[3].IN1
input_A[4] => out_a_mux.DATAA
input_A[4] => inv_input_A[4].IN1
input_A[5] => out_a_mux.DATAA
input_A[5] => inv_input_A[5].IN1
input_A[6] => out_a_mux.DATAA
input_A[6] => inv_input_A[6].IN1
input_A[7] => out_a_mux.DATAA
input_A[7] => inv_input_A[7].IN1
input_B[0] => out_b_mux_pre[0].DATAA
input_B[1] => out_b_mux_pre[1].DATAA
input_B[2] => out_b_mux_pre[2].DATAA
input_B[3] => out_b_mux_pre[3].DATAA
input_B[4] => out_b_mux_pre[4].DATAA
input_B[5] => out_b_mux_pre[5].DATAA
input_B[6] => out_b_mux_pre[6].DATAA
input_B[7] => out_b_mux_pre[7].DATAA
out[0] <= widemux:alu_mux.out
out[1] <= widemux:alu_mux.out
out[2] <= widemux:alu_mux.out
out[3] <= widemux:alu_mux.out
out[4] <= widemux:alu_mux.out
out[5] <= widemux:alu_mux.out
out[6] <= widemux:alu_mux.out
out[7] <= widemux:alu_mux.out
flags[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= add_out[7].DB_MAX_OUTPUT_PORT_TYPE
flags[2] <= adder:alu_adder.cout


|alu|adder:alu_adder
cin => _.DATAB
input_A[0] => _.DATAD
input_A[1] => _.DATAD
input_A[2] => _.DATAD
input_A[3] => _.DATAD
input_A[4] => _.DATAD
input_A[5] => _.DATAD
input_A[6] => _.DATAD
input_A[7] => _.DATAD
input_B[0] => _.DATAC
input_B[1] => _.DATAC
input_B[2] => _.DATAC
input_B[3] => _.DATAC
input_B[4] => _.DATAC
input_B[5] => _.DATAC
input_B[6] => _.DATAC
input_B[7] => _.DATAC
out[0] <= _.SUM_OUT
out[1] <= _.SUM_OUT
out[2] <= _.SUM_OUT
out[3] <= _.SUM_OUT
out[4] <= _.SUM_OUT
out[5] <= _.SUM_OUT
out[6] <= _.SUM_OUT
out[7] <= _.SUM_OUT
cout <= _.SUM_OUT


|alu|widemux:alu_mux
in0[0] => Mux7.IN0
in0[1] => Mux6.IN0
in0[2] => Mux5.IN0
in0[3] => Mux4.IN0
in0[4] => Mux3.IN0
in0[5] => Mux2.IN0
in0[6] => Mux1.IN0
in0[7] => Mux0.IN0
in1[0] => Mux7.IN1
in1[1] => Mux6.IN1
in1[2] => Mux5.IN1
in1[3] => Mux4.IN1
in1[4] => Mux3.IN1
in1[5] => Mux2.IN1
in1[6] => Mux1.IN1
in1[7] => Mux0.IN1
in2[0] => Mux7.IN2
in2[1] => Mux6.IN2
in2[2] => Mux5.IN2
in2[3] => Mux4.IN2
in2[4] => Mux3.IN2
in2[5] => Mux2.IN2
in2[6] => Mux1.IN2
in2[7] => Mux0.IN2
in3[0] => Mux7.IN3
in3[1] => Mux6.IN3
in3[2] => Mux5.IN3
in3[3] => Mux4.IN3
in3[4] => Mux3.IN3
in3[5] => Mux2.IN3
in3[6] => Mux1.IN3
in3[7] => Mux0.IN3
in4[0] => Mux7.IN4
in4[1] => Mux6.IN4
in4[2] => Mux5.IN4
in4[3] => Mux4.IN4
in4[4] => Mux3.IN4
in4[5] => Mux2.IN4
in4[6] => Mux1.IN4
in4[7] => Mux0.IN4
in5[0] => Mux7.IN5
in5[1] => Mux6.IN5
in5[2] => Mux5.IN5
in5[3] => Mux4.IN5
in5[4] => Mux3.IN5
in5[5] => Mux2.IN5
in5[6] => Mux1.IN5
in5[7] => Mux0.IN5
in6[0] => Mux7.IN6
in6[1] => Mux6.IN6
in6[2] => Mux5.IN6
in6[3] => Mux4.IN6
in6[4] => Mux3.IN6
in6[5] => Mux2.IN6
in6[6] => Mux1.IN6
in6[7] => Mux0.IN6
in7[0] => Mux7.IN7
in7[1] => Mux6.IN7
in7[2] => Mux5.IN7
in7[3] => Mux4.IN7
in7[4] => Mux3.IN7
in7[5] => Mux2.IN7
in7[6] => Mux1.IN7
in7[7] => Mux0.IN7
sel[0] => Mux0.IN10
sel[0] => Mux1.IN10
sel[0] => Mux2.IN10
sel[0] => Mux3.IN10
sel[0] => Mux4.IN10
sel[0] => Mux5.IN10
sel[0] => Mux6.IN10
sel[0] => Mux7.IN10
sel[1] => Mux0.IN9
sel[1] => Mux1.IN9
sel[1] => Mux2.IN9
sel[1] => Mux3.IN9
sel[1] => Mux4.IN9
sel[1] => Mux5.IN9
sel[1] => Mux6.IN9
sel[1] => Mux7.IN9
sel[2] => Mux0.IN8
sel[2] => Mux1.IN8
sel[2] => Mux2.IN8
sel[2] => Mux3.IN8
sel[2] => Mux4.IN8
sel[2] => Mux5.IN8
sel[2] => Mux6.IN8
sel[2] => Mux7.IN8
out[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_and:alu_and
input_A[0] => out.IN0
input_A[1] => out.IN0
input_A[2] => out.IN0
input_A[3] => out.IN0
input_A[4] => out.IN0
input_A[5] => out.IN0
input_A[6] => out.IN0
input_A[7] => out.IN0
input_B[0] => out.IN1
input_B[1] => out.IN1
input_B[2] => out.IN1
input_B[3] => out.IN1
input_B[4] => out.IN1
input_B[5] => out.IN1
input_B[6] => out.IN1
input_B[7] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_or:alu_or
input_A[0] => out.IN0
input_A[1] => out.IN0
input_A[2] => out.IN0
input_A[3] => out.IN0
input_A[4] => out.IN0
input_A[5] => out.IN0
input_A[6] => out.IN0
input_A[7] => out.IN0
input_B[0] => out.IN1
input_B[1] => out.IN1
input_B[2] => out.IN1
input_B[3] => out.IN1
input_B[4] => out.IN1
input_B[5] => out.IN1
input_B[6] => out.IN1
input_B[7] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_xor:alu_xor
input_A[0] => out.IN0
input_A[1] => out.IN0
input_A[2] => out.IN0
input_A[3] => out.IN0
input_A[4] => out.IN0
input_A[5] => out.IN0
input_A[6] => out.IN0
input_A[7] => out.IN0
input_B[0] => out.IN1
input_B[1] => out.IN1
input_B[2] => out.IN1
input_B[3] => out.IN1
input_B[4] => out.IN1
input_B[5] => out.IN1
input_B[6] => out.IN1
input_B[7] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|alu|shifter:shifter
input_A[0] => ShiftRight0.IN40
input_A[0] => ShiftRight1.IN8
input_A[0] => ShiftLeft0.IN8
input_A[1] => ShiftRight0.IN39
input_A[1] => ShiftRight1.IN7
input_A[1] => ShiftLeft0.IN7
input_A[2] => ShiftRight0.IN38
input_A[2] => ShiftRight1.IN6
input_A[2] => ShiftLeft0.IN6
input_A[3] => ShiftRight0.IN37
input_A[3] => ShiftRight1.IN5
input_A[3] => ShiftLeft0.IN5
input_A[4] => ShiftRight0.IN36
input_A[4] => ShiftRight1.IN4
input_A[4] => ShiftLeft0.IN4
input_A[5] => ShiftRight0.IN35
input_A[5] => ShiftRight1.IN3
input_A[5] => ShiftLeft0.IN3
input_A[6] => ShiftRight0.IN34
input_A[6] => ShiftRight1.IN2
input_A[6] => ShiftLeft0.IN2
input_A[7] => ShiftRight0.IN33
input_A[7] => ShiftRight1.IN1
input_A[7] => ShiftLeft0.IN1
input_B[0] => ShiftRight1.IN16
input_B[0] => ShiftLeft0.IN16
input_B[0] => ShiftRight0.IN3
input_B[1] => ShiftRight1.IN15
input_B[1] => ShiftLeft0.IN15
input_B[1] => ShiftRight0.IN2
input_B[2] => ShiftRight1.IN14
input_B[2] => ShiftLeft0.IN14
input_B[2] => ShiftRight0.IN1
input_B[3] => ShiftRight1.IN13
input_B[3] => ShiftLeft0.IN13
input_B[3] => Add0.IN5
input_B[4] => ShiftRight1.IN12
input_B[4] => ShiftLeft0.IN12
input_B[4] => Add0.IN4
input_B[5] => ShiftRight1.IN11
input_B[5] => ShiftLeft0.IN11
input_B[5] => Add0.IN3
input_B[6] => ShiftRight1.IN10
input_B[6] => ShiftLeft0.IN10
input_B[6] => Add0.IN2
input_B[7] => ShiftRight1.IN9
input_B[7] => ShiftLeft0.IN9
input_B[7] => Add0.IN1
dir => Mux0.IN4
dir => Mux1.IN4
dir => Mux2.IN4
dir => Mux3.IN4
dir => Mux4.IN4
dir => Mux5.IN4
dir => Mux6.IN4
dir => Mux7.IN4
mode => Mux0.IN5
mode => Mux1.IN5
mode => Mux2.IN5
mode => Mux3.IN5
mode => Mux4.IN5
mode => Mux5.IN5
mode => Mux6.IN5
mode => Mux7.IN5
out[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


